---
- name: set base64 encode for {{ ocp4_workload_aquasec_base_url }} username and password
  set_fact:
    # yamllint disable-line rule:line-length
    ocp4_workload_aquasec_base64: "{{ (ocp4_workload_aquasec.quay_username + ':' + ocp4_workload_aquasec.quay_password) | b64encode }}"

#- debug:
#    msg: "{{ ocp4_workload_aquasec.private_registry_url }}"
#
#- name: set json for dockerconfigjson
#  set_fact:
#    ocp4_workload_nginxplus_dockerconfigjson: "{{ lookup('template', 'aquasec-dockerconfigjson.j2') }}"

- name: Create {{ ocp4_workload_aquasec.namespace }} namespace
  kubernetes.core.k8s:
    name: "{{ ocp4_workload_aquasec.namespace }}"
    api_version: v1
    kind: Namespace
    state: present
  register: result
  until: result is not failed
  retries: 10
  delay: 6

- name: Create secret for {{ ocp4_workload_aquasec_namespace }}
  kubernetes.core.k8s:
    state: present
    template: aquasec-db-secret.j2
  register: result
  until: result is not failed
  retries: 10
  delay: 6

- name: Create Sock Shop project
  kubernetes.core.k8s:
    state: present
    template: sockshop_project.j2
  register: result
  until: result is not failed
  retries: 10
  delay: 6

# Deploy Sock Shop
- name: Deploy Sock Shop
  kubernetes.core.k8s:
    state: present
    namespace: "{{ ocp4_workload_aquasec_sockshop_namespace }}"
    template: sockshop.j2
  register: result
  until: result is not failed
  retries: 10
  delay: 6

# Expose Sock Shop to the world
- name: Deploy Sock Shop Cloud route
  kubernetes.core.k8s:
    state: present
    template: sockshop_route.j2
  register: result
  until: result is not failed
  retries: 10
  delay: 6

# Leave this as the last task in the playbook.
# --------------------------------------------
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
